This module defines a method that prints a sorted list in ascending order

import method to test
>>> MyList = __import__('1-my_list').MyList

SUCCESSFUL CASES:
Test with arguments of type int
	>>> my_list = MyList([5, 4, 3])
	>>> print(my_list)
	[5, 4, 3]
	>>> my_list.print_sorted()
	[3, 4, 5]

	>>> my_list = MyList()
	>>> my_list.append(3)
	>>> my_list.append(2)
	>>> my_list.append(1)
	>>> print(my_list)
	[3, 2, 1]
	>>> my_list.print_sorted()
	[1, 2, 3]

	>>> my_list = MyList()
	>>> my_list.append(10)
	>>> my_list.append(15)
	>>> my_list.append(-5)
	>>> print(my_list)
	[10, 15, -5]
	>>> my_list.print_sorted()
	[-5, 10, 15]

Test with any empty list
	>>> my_list = MyList()
	>>> print(my_list)
	[]

Test with a list of one element
	>>> my_list = MyList([5])
	>>> print(my_list)
	[5]

Test use of isinstance, issubclass and type
	>>> type(MyList())
	<class '1-my_list.MyList'>

	>>> isinstance(MyList, object)
	True

	>>> issubclass(MyList, list)
	True

FAILED CASES:
Test with more than 1 list
	>>> my_list = MyList([1, 2], [3, 4])
	Traceback (most recent call last):
	TypeError: list expected at most 1 argument, got 2

Test with non-int arguments
	>>> my_list = MyList([3, "Mary", "John"])
	>>> my_list.print_sorted()
	Traceback (most recent call last):
	TypeError: '<' not supported between instances of 'str' and 'int'

	>>> my_list = MyList(None)
	Traceback (most recent call last):
	TypeError: 'NoneType' object is not iterable
