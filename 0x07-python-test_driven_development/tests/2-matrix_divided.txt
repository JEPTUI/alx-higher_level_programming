This module defines the division of all elements in a matrix using function matrix_divided(matrix, div)

import method to test
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

SUCCESSFUL TESTS:
	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 2))
	[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

	>>> matrix = [[1, 2, 3], [4, 5, 6]]
	>>> print(matrix_divided(matrix, 3))
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix = [[-3.5], [-4.5]]
	>>> print(matrix_divided(matrix, 1.5))
	[[-2.33], [-3.0]]

FAILED TESTS:
Empty matrix
	>>> matrix = []
        >>> print(matrix_divided(matrix, 2))
        Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[]]
	>>> print(matrix_divided(matrix, 2))
	[[]]

Test a single list matrix
	>>> matrix = [1, 2, 3]
	>>> print(matrix_divided(matrix, 2))
	Traceback (most recent call last):
        TypeError: matrix must be a matrix (list of lists) of integers/floats

Test a matrix with non-integer and non-float elements
	>>> matrix = [[1, "2", "3"], [4, 5, "6"]]
	>>> print(matrix_divided(matrix, 3))
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Test a mtrix with different size of rows
	>>> matrix = [[1, 2, 3, 4], [5, 6, 7]]
	>>> print(matrix_divided(matrix, 4))
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

Test Div
	>>> matrix = [[2, 3, 4], [5, 6, 7]]
	>>> print(matrix_divided(matrix, "3"))
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix = [[3, 4, 5], [6, 7, 8]]
        >>> print(matrix_divided(matrix, "hey"))
        Traceback (most recent call last):
        TypeError: div must be a number

Test with 0
	>>> matrix = [[3, 4, 5], [6, 7, 8]]
	>>> print(matrix_divided(matrix, 0))
	Traceback (most recent call last):
	ZeroDivisionError: division by zero
